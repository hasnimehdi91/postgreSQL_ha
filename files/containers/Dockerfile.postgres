# ------------------------------------------------------------------------------
# Dockerfile: PostgreSQL 17 with Patroni and Consul (HA-Compatible)
# ------------------------------------------------------------------------------
#
# Base Image:
#   - Rocky Linux 9.3 Minimal
#
# Purpose:
#   - Used as a PostgreSQL node in a high availability (HA) cluster
#   - Managed by Patroni using Consul as the distributed configuration store (DCS)
#
# Components:
#   - PostgreSQL 17 (streaming replication ready)
#   - Patroni (cluster orchestrator)
#   - Python + pip (for Patroni installation)
#
# Notes:
#   - Entrypoint is left to Patroni â€” it controls PostgreSQL lifecycle
#   - PGDATA must be writable and mounted in Compose/K8s
# ------------------------------------------------------------------------------

FROM rockylinux:9.3.20231119-minimal
# ------------------------------------------------------------------------------
# Environment Configuration
# ------------------------------------------------------------------------------
ENV PG_MAJOR=17
ENV PGDATA=/var/lib/postgresql/data
ENV PATH="/usr/pgsql-${PG_MAJOR}/bin:${PATH}"

# ------------------------------------------------------------------------------
# System Setup: PostgreSQL, Python, Patroni
# ------------------------------------------------------------------------------
RUN microdnf update -y && \
    microdnf install -y \
        epel-release \
        https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm && \
    microdnf module disable -y postgresql && \
    microdnf install -y \
        python3 python3-pip \
        postgresql${PG_MAJOR}-server \
        postgresql${PG_MAJOR}-contrib \
        postgresql${PG_MAJOR} \
        libpq && \
    pip3 install --no-cache-dir --upgrade pip setuptools wheel && \
    pip3 install "patroni[consul]" && \
    rm -rf /var/cache/yum /var/cache/dnf /var/lib/dnf/* /var/log/*

# ------------------------------------------------------------------------------
# Filesystem Preparation
# ------------------------------------------------------------------------------
RUN mkdir -p /etc/patroni /docker-entrypoint-initdb.d /var/lib/postgresql && \
    chmod -R 700 /var/lib/postgresql && \
    chown -R postgres:postgres /var/lib/postgresql

# ------------------------------------------------------------------------------
# Switch to non-root user for execution
# ------------------------------------------------------------------------------
USER postgres
WORKDIR /var/lib/postgresql

# ------------------------------------------------------------------------------
# Default command: Patroni must be configured with mounted patroni.yml
# ------------------------------------------------------------------------------
CMD ["patroni", "/etc/patroni/patroni.yml"]
    