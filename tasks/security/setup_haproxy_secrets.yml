# code: language=ansible

# ------------------------------------------------------------------------------
# Define HAProxy Paths
# ------------------------------------------------------------------------------
# Sets the paths for storing HAProxy configuration files and certificates.
# These variables are reused throughout the playbook to ensure consistent and
# centralized path definitions for the HAProxy container volumes.
- set_fact:
    haproxy_config_path: "{{ containers_volume_dir }}/ha_proxy"
    haproxy_certs_path: "{{ containers_volume_dir }}/ha_proxy/certs"

# ------------------------------------------------------------------------------
# Create HAProxy Volume Directories
# ------------------------------------------------------------------------------
# Creates the necessary directory structure for HAProxy, including:
# - The main configuration directory
# - A directory for Consul-related certificates
# - A directory for SSL certificates
# The 'recurse' option ensures that any required parent directories are also created.
- name: Create haproxy volumes
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
  loop:
    - "{{ haproxy_config_path }}"
    - "{{ haproxy_certs_path }}/consul/"
    - "{{ haproxy_certs_path }}/ssl/"

# ------------------------------------------------------------------------------
# Include Certificate Copy Tasks for HAProxy
# ------------------------------------------------------------------------------
# Invokes a task file to copy the relevant Consul certificates for each replica
# in the Consul cluster. The number of replicas is determined by the variable
# 'consul_cluster_replica_count', which defaults to 3 if not set.
# Each loop iteration corresponds to a different Consul node.
- include_tasks:
    file: "{{ current_dir }}/tasks/security/copy_consul_certificates_for_haproxy.yml"
  loop: "{{ range(1, (consul_cluster_replica_count | default(3)) + 1) }}"

# ------------------------------------------------------------------------------
# Define HAProxy SSL Certificate Variables
# ------------------------------------------------------------------------------
# Sets the certificate name and subject details for the HAProxy SSL certificate.
# These values are used to generate a self-signed certificate for the load
# balancer to enable secure incoming TLS connections.
- set_fact:
    certificate_name: "ha_proxy"
    certificate_common_name: postgres_ha_load_balancer
    certificate_subject_alt_name:
    - DNS:postgres_ha_load_balancer
    - DNS:localhost
    - IP:127.0.0.1

# ------------------------------------------------------------------------------
# Generate Self-Signed TLS Certificate for HAProxy
# ------------------------------------------------------------------------------
# Includes a reusable task file to generate a private key, certificate signing
# request, and self-signed certificate for HAProxy using the variables defined above.
# This certificate is used to terminate TLS connections on the HAProxy frontend.
- include_tasks:
    file: "{{ current_dir }}/tasks/security/generate_services_self_signed_certificate.yml"

# ------------------------------------------------------------------------------
# Copy HAProxy SSL Certificate to Target Location
# ------------------------------------------------------------------------------
# Copies the HAProxy public SSL certificate to the appropriate directory where
# HAProxy expects to find it. This will be later combined with the private key.
- name: Copy haproxy SSL certificate
  copy:
    src: "{{ sensitive_directory }}/{{ certificate_name }}.crt"
    dest: "{{ haproxy_certs_path }}/ssl/haproxy.pem"

# ------------------------------------------------------------------------------
# Append HAProxy SSL Private Key to PEM File
# ------------------------------------------------------------------------------
# Appends the private key to the HAProxy SSL certificate file to produce a valid
# .pem file containing both the public certificate and private key. This format
# is required by HAProxy for TLS termination on the frontend.
- name: "Append haproxy SSL certificate key"
  shell:
    cmd: "cat {{ sensitive_directory }}/{{ certificate_name }}.key >> {{ haproxy_certs_path }}/ssl/haproxy.pem"
